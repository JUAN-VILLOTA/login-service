name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    name: Build, Test and Quality Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean compile -DskipTests

    - name: Run Unit Tests
      run: mvn test

    - name: Generate JaCoCo Coverage Report
      run: mvn jacoco:report

    - name: Upload JaCoCo Coverage Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: jacoco-report
        path: target/site/jacoco/

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: target/surefire-reports/

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: SonarCloud Analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=JUAN-VILLOTA_login-service \
          -Dsonar.organization=juan-villota \
          -Dsonar.host.url=https://sonarcloud.io
      continue-on-error: true  # No fallar el pipeline si SonarCloud falla

    - name: Check Test Coverage
      run: |
        echo "Verificando cobertura de c√≥digo..."
        mvn jacoco:check || echo "‚ö†Ô∏è La cobertura no alcanza el m√≠nimo requerido"

    - name: Build Docker Image (optional)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "üê≥ Construyendo imagen Docker..."
        # Descomentar cuando tengas Dockerfile
        # docker build -t login-service:${{ github.sha }} .

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: target/surefire-reports/*.xml
        check_name: Test Results
        comment_mode: off

  # Job de despliegue (opcional - descomentar cuando est√© listo)
  # deploy:
  #   name: Deploy to Environment
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   
  #   steps:
  #   - name: Deploy to Production
  #     run: |
  #       echo "üöÄ Desplegando a producci√≥n..."
  #       # Agregar comandos de despliegue aqu√≠

